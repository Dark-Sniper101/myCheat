let MAP = (
    "11637517422274862853338597396444961841755517295286\n" +
    "13813736722492484783351359589446246169155735727126\n" +
    "21365113283247622439435873354154698446526571955763\n" +
    "36949315694715142671582625378269373648937148475914\n" +
    "74634171118574528222968563933317967414442817852555\n" +
    "13191281372421239248353234135946434524615754563572\n" +
    "13599124212461123532357223464346833457545794456865\n" +
    "31254216394236532741534764385264587549637569865174\n" +
    "12931385212314249632342535174345364628545647573965\n" +
    "23119445813422155692453326671356443778246755488935\n" +
    "22748628533385973964449618417555172952866628316397\n" +
    "24924847833513595894462461691557357271266846838237\n" +
    "32476224394358733541546984465265719557637682166874\n" +
    "47151426715826253782693736489371484759148259586125\n" +
    "85745282229685639333179674144428178525553928963666\n" +
    "24212392483532341359464345246157545635726865674683\n" +
    "24611235323572234643468334575457944568656815567976\n" +
    "42365327415347643852645875496375698651748671976285\n" +
    "23142496323425351743453646285456475739656758684176\n" +
    "34221556924533266713564437782467554889357866599146\n" +
    "33859739644496184175551729528666283163977739427418\n" +
    "35135958944624616915573572712668468382377957949348\n" +
    "43587335415469844652657195576376821668748793277985\n" +
    "58262537826937364893714847591482595861259361697236\n" +
    "96856393331796741444281785255539289636664139174777\n" +
    "35323413594643452461575456357268656746837976785794\n" +
    "35722346434683345754579445686568155679767926678187\n" +
    "53476438526458754963756986517486719762859782187396\n" +
    "34253517434536462854564757396567586841767869795287\n" +
    "45332667135644377824675548893578665991468977611257\n" +
    "44961841755517295286662831639777394274188841538529\n" +
    "46246169155735727126684683823779579493488168151459\n" +
    "54698446526571955763768216687487932779859814388196\n" +
    "69373648937148475914825958612593616972361472718347\n" +
    "17967414442817852555392896366641391747775241285888\n" +
    "46434524615754563572686567468379767857948187896815\n" +
    "46833457545794456865681556797679266781878137789298\n" +
    "64587549637569865174867197628597821873961893298417\n" +
    "45364628545647573965675868417678697952878971816398\n" +
    "56443778246755488935786659914689776112579188722368\n" +
    "55172952866628316397773942741888415385299952649631\n" +
    "57357271266846838237795794934881681514599279262561\n" +
    "65719557637682166874879327798598143881961925499217\n" +
    "71484759148259586125936169723614727183472583829458\n" +
    "28178525553928963666413917477752412858886352396999\n" +
    "57545635726865674683797678579481878968159298917926\n" +
    "57944568656815567976792667818781377892989248891319\n" +
    "75698651748671976285978218739618932984172914319528\n" +
    "56475739656758684176786979528789718163989182927419\n" +
    "67554889357866599146897761125791887223681299833479"
    ).split('\n').map(e => e.split('').map(x => parseInt(x)))


let STEPS = [[0,0],
    [1,0],
    [2,0],
    [3,0],
    [4,0],
    [5,0],
    [6,0],
    [7,0],
    [8,0],
    [9,0],
    [10,0],
    [11,0],
    [12,0],
    [12,1],
    [12,2],
    [13,2],
    [14,2],
    [15,2],
    [15,3],
    [16,3],
    [16,4],
    [16,5],
    [16,6],
    [16,7],
    [16,8],
    [16,9],
    [17,9],
    [18,9],
    [18,10],
    [18,11],
    [18,12],
    [19,12],
    [19,13],
    [19,14],
    [20,14],
    [21,14],
    [21,15],
    [22,15],
    [22,16],
    [23,16],
    [24,16],
    [25,16],
    [25,17],
    [25,18],
    [25,19],
    [26,19],
    [27,19],
    [28,19],
    [28,20],
    [28,21],
    [28,22],
    [29,22],
    [29,23],
    [29,24],
    [30,24],
    [30,25],
    [30,26],
    [30,27],
    [31,27],
    [32,27],
    [33,27],
    [33,28],
    [33,29],
    [34,29],
    [34,30],
    [34,31],
    [34,32],
    [35,32],
    [36,32],
    [36,33],
    [37,33],
    [37,34],
    [38,34],
    [39,34],
    [39,35],
    [39,36],
    [39,37],
    [40,37],
    [41,37],
    [42,37],
    [43,37],
    [43,38],
    [43,39],
    [43,40],
    [43,41],
    [44,41],
    [45,41],
    [46,41],
    [46,42],
    [47,42],
    [47,43],
    [47,44],
    [47,45],
    [48,45],
    [49,45],
    [49,46],
    [49,47],
    [49,48],
    [49,49],
];

function setup() {
    frameRate(60);
    createCanvas(499*2, 499*2);
}

let N = 0;

function depthColor(x) {
    const w = {
        0: 'rgb(21, 34, 56)',
        1: 'rgb(25, 40, 65)',
        2: 'rgb(28, 46, 74)',
        3: 'rgb(32, 51, 84)',
        4: 'rgb(35, 57, 93)',
        5: 'rgb(48,74,114)',
        6: 'rgb(71,101,147)',
        7: 'rgb(89,119,167)',
        8: 'rgb(107,137,186)',
        9: 'rgb(148,179,227)',
    }
    return w[x] || 'black';
}

let V = []

let K = 0;
let DONE = false;
let J = 0;

function draw() {
    background("#10101a");

    let S = 20

    for (i = 0; i <= 49; i++) {
        for (j = 0; j <= 49; j++) {
            let v = MAP[i][j]
            stroke(depthColor(v));
            fill(depthColor(v))
            rect(i*S, j*S, S, S);
            stroke(depthColor(100));
            fill(depthColor(100))
            text(v, i*S+S/2-2, j*S+S/2+3)
        }
    }


    for (i = 0; i < Math.min(N, STEPS.length); ++i) {
        let x = STEPS[i][1]
        let y = STEPS[i][0]
        stroke('rgb(255, 255, 102)');
        fill('rgb(255, 255, 102)')
        let v = MAP[y][x]
        rect(x*S, y*S, S, S);
        stroke(depthColor(100));
        fill(depthColor(100))
        text(v, x*S+S/2-2, y*S+S/2+3)
    }
    N+=1
}