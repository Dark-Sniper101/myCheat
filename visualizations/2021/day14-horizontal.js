let STEPS = [
    {size: 20, frequency: {S:1, H:4, N:3, C:3, O:2, P:1, F:3, B:1, V:1, K:1}},
    {size: 39, frequency: {S:1, O:5, H:7, K:5, B:3, N:6, C:4, P:1, V:4, F:3}},
    {size: 77, frequency: {S:2, F:11, O:9, P:6, H:12, K:8, B:3, V:8, N:13, C:5}},
    {size: 153, frequency: {S:7, B:14, F:20, V:16, O:15, N:24, P:9, K:16, H:22, C:10}},
    {size: 305, frequency: {S:18, V:32, B:25, H:45, F:42, N:52, P:22, O:27, K:30, C:12}},
    {size: 609, frequency: {S:43, N:104, V:54, K:58, B:58, O:52, H:83, F:85, P:47, C:25}},
    {size: 1217, frequency: {S:85, N:200, F:163, V:119, K:104, B:131, O:95, P:101, H:170, C:49}},
    {size: 2433, frequency: {S:182, C:81, N:410, F:320, V:212, K:218, B:270, O:179, P:210, H:351}},
    {size: 4865, frequency: {S:368, N:812, C:163, H:692, F:640, B:540, V:427, O:339, K:439, P:445}},
    {size: 9729, frequency: {S:742, N:1624, C:326, H:1412, F:1256, B:1100, V:815, P:898, O:659, K:897}},
    {size: 19457, frequency: {S:1483, C:651, N:3200, F:2516, H:2871, B:2219, V:1588, O:1294, K:1785, P:1850}},
    {size: 38913, frequency: {S:2986, N:6427, C:1324, H:5784, F:4970, B:4471, V:3054, O:2555, K:3630, P:3712}},
    {size: 77825, frequency: {S:5988, N:12683, C:2698, H:11706, F:9971, B:8935, V:5954, K:7289, O:5065, P:7536}},
    {size: 155649, frequency: {S:12039, C:5452, N:25309, F:19776, H:23562, B:18001, V:11604, O:10085, K:14703, P:15118}},
    {size: 311297, frequency: {S:24274, N:50198, C:11105, H:47342, F:39499, B:36090, V:22813, K:29483, O:20039, P:30454}},
    {size: 622593, frequency: {S:48886, N:100019, C:22464, H:95107, F:78615, B:72449, V:44852, O:39981, K:59280, P:60940}},
    {size: 1245185, frequency: {S:98547, C:45396, N:198954, F:156897, H:190771, B:145132, V:88739, O:79630, K:118855, P:122264}},
    {size: 2490369, frequency: {S:198692, N:396833, C:91720, H:382012, F:312513, B:290897, V:175709, K:238429, O:158942, P:244622}},
    {size: 4980737, frequency: {S:400210, N:791001, C:185050, H:764858, F:623752, B:582374, V:349002, O:316993, K:477670, P:489827}},
    {size: 9961473, frequency: {S:806245, C:372899, N:1579684, F:1244049, H:1530106, B:1165832, V:693515, O:632970, K:956803, P:979370}},
    {size: 19922945, frequency: {S:1622975, N:3154549, C:751090, H:3059948, F:2483868, B:2332675, V:1381131, K:1914750, O:1263104, P:1958855}},
    {size: 39845889, frequency: {S:3265656, N:6306276, C:1511448, H:6117865, F:4958278, B:4666462, V:2750899, O:2522596, K:3831224, P:3915185}},
    {size: 79691777, frequency: {S:6566274, C:3039584, N:12608298, F:9904263, H:12229935, B:9333102, V:5486351, O:5036202, K:7661221, P:7826547}},
    {size: 159383553, frequency: {S:13197693, N:25224722, C:6109159, H:24446306, F:19782831, B:18663279, V:10943344, K:15318080, O:10058954, P:15639185}},
    {size: 318767105, frequency: {S:26508451, N:50468345, C:12271385, H:48867295, F:39532217, B:37316199, V:21844345, O:20088308, K:30617727, P:31252833}},
    {size: 637534209, frequency: {S:53221477, C:24637170, N:101012702, F:78997198, H:97685163, B:74603537, V:43610529, O:40128229, K:61194632, P:62443572}},
    {size: 1275068417, frequency: {S:106797107, N:202178228, C:49441571, H:195285970, F:157905520, B:149141029, V:87101462, K:122290802, O:80158514, P:124768214}},
    {size: 2550136833, frequency: {S:214220732, N:404731153, C:99178892, H:390430423, F:315642966, B:298131674, V:173983315, O:160150652, K:244384930, P:249282096}},
    {size: 5100273665, frequency: {S:429519082, C:198877668, N:810185013, F:631063274, H:780640587, B:595954201, V:347613971, O:319980231, K:488362131, P:498077507}},
    {size: 10200547329, frequency: {S:860917514, N:1621891469, C:398672805, H:1560948769, F:1261725250, B:1191267704, V:694587455, K:975949337, O:639404641, P:995182385}},
    {size: 20401094657, frequency: {S:1725045483, N:3246625411, C:798951363, H:3121454505, F:2522926079, B:2381283227, V:1388104496, O:1277775723, K:1950403743, P:1988524627}},
    {size: 40802189313, frequency: {S:3455631083, C:1600720938, N:6498806097, F:5044953181, H:6242376291, B:4760106402, V:2774279695, O:2553747680, K:3898055802, P:3973512144}},
    {size: 81604378625, frequency: {S:6920691152, N:13007753791, C:3206355866, H:12484325107, F:10088765090, B:9515553822, V:5545253559, K:7791033269, O:5104220652, P:7940426317}},
    {size: 163208757249, frequency: {S:13857518731, N:26034443093, C:6421296335, H:24968774322, F:20175683034, B:19022270964, V:11084597761, O:10202719303, K:15572939104, P:15868514602}},
    {size: 326417514497, frequency: {S:27742410596, C:12857503234, N:52102830241, F:40349152688, H:49939395819, B:38028199854, V:22158941917, O:20395230354, K:31129508025, P:31714341769}},
    {size: 652835028993, frequency: {S:55531436868, N:104267147224, C:25740936483, H:99884766037, F:80694998872, B:76026169203, V:44299677840, K:62230150795, O:40772660941, P:63387084730}},
    {size: 1305670057985, frequency: {S:111141793194, N:208642848580, C:51526754899, H:199784801966, F:161386570458, B:151997409257, V:88567614624, O:81513959740, K:124409598949, P:126698706318}},
    {size: 2611340115969, frequency: {S:222417544428, C:103131236649, N:417478152489, F:322768818021, H:399604183950, B:303895168597, V:177079285549, O:162973424662, K:248731124774, P:253261176850}},
    {size: 5222680231937, frequency: {S:445061698090, N:835291830185, C:206396587887, H:799282025290, F:645535335072, B:607611859791, V:354061030063, K:497309933526, O:325851740780, P:506278191253}},
    {size: 10445360463873, frequency: {S:890507450436, N:1671169118782, C:413024591549, H:1598713834088, F:1291070995826, B:1214904792466, V:707951306864, O:651538861876, K:994358432532, P:1012121079454}},
    {size: 20890720927745, frequency: {S:1781664690505, C:826447333421, N:3343348437631, F:2582153750303, H:3197723180728, B:2429245101465, V:1415605689605, O:1302792457115, K:1988270041206, P:2023470245766}},
    {size: 41781441855489, frequency: {S:3564430382797, N:6688438560194, C:1653579541444, H:6396014728348, F:5164338061077, B:4857493755121, V:2830694918652, K:3975780325233, O:2605093004845, P:4045578577778}},
    {size: 83562883710977, frequency: {S:7130725241668, N:13379857463441, C:3308334516288, H:12793102373899, F:10328751699748, B:9713241145222, V:5660495321121, O:5209338182842, K:7950273491482, P:8088764275266}},
    {size: 167125767421953, frequency: {S:14264611906053, C:6618685598945, N:26764807355481, F:20657655571805, H:25588197135961, B:19423429877938, V:11319443664040, O:10417219304861, K:15898373821022, P:16173343185847}},
    {size: 334251534843905, frequency: {S:28534585402377, N:53538272577587, C:13240824977952, H:51180045929099, F:41315615925291, B:38841553562660, V:22636219550982, K:31793089085320, O:20831937399550, P:32339390433087}},
    {size: 668503069687809, frequency: {S:57078273927288, N:107091241877056, C:26487562671938, H:102366707403128, F:82631796449621, B:77673906580341, V:45267848818987, O:41659588266380, K:63580031793894, P:64666111899176}},
    {size: 1337006139375617, frequency: {S:114172013225590, C:52985234958974, N:214207352075582, F:165264631413089, H:204745283434198, B:155331926203171, V:90527814678563, O:83311840082858, K:127149758057715, P:129310285245877}},
    {size: 2674012278751233, frequency: {S:228370327281559, N:428456729253199, C:105987748451089, H:409511675894854, F:330531101242402, B:310636481481557, V:181042123569439, K:254282253919816, O:166611134704939, P:258582702952379}},
    {size: 5348024557502465, frequency: {S:456785418699810, N:856984347380673, C:212005001532186, H:819060613668805, F:661065427094661, B:621225954279327, V:362061138981599, O:333200842615233, K:508535623895141, P:517100189355030}},
    {size: 10696049115004929, frequency: {S:913647092862624, C:424060368201000, N:1714088169596575, F:1322136391535340, H:1638186564343532, B:1242371325151450, V:724082824342666, O:666365104149666, K:1017022919558865, P:1034088355263211}},
    {size: 21392098230009857, frequency: {S:1827424193722510, N:3428377543623928, C:848206659233674, H:3276487020050710, F:2644282197313996, B:2484604830716936, V:1448098349308149, K:2033964993069025, O:1332667816635748, P:2067984626335181}},
    {size: 42784196460019713, frequency: {S:3655070197298604, N:6857093816433883, C:1696559867987984, H:6553171539978753, F:5288580201680066, B:4968974302540659, V:2896082099711641, O:2665229229600361, K:4067794642222656, P:4135640562565106}},
    {size: 85568392920039425, frequency: {S:7310519105943963, C:3393369597546677, N:13714757904700849, F:10577186684351756, H:13106683987813780, B:9937547328867895, V:5791969168848139, O:5330277126927346, K:8135362578541374, P:8270719436497646}},
    {size: 171136785840078849, frequency: {S:14621685163500103, N:27430476062885608, C:6787165142515886, H:26213954064464671, F:21154416735274890, B:19874411238620897, V:11583606854474138, K:16270344904685227, O:10660245197646545, P:16540480476010884}},
    {size: 342273571680157697, frequency: {S:29244476143636758, N:54862570079379305, C:13575056274328498, H:52428912164245084, F:42308904386539595, B:39747659771809113, V:23166650457289628, O:21319963894893312, K:32540051274313268, P:33079327233723136}},
    {size: 684547143360315393, frequency: {S:58490843123825260, C:27151349879105649, N:109727867942154311, F:84617924233263313, H:104859539159851961, B:79493342793116144, V:46332344665194993, O:42639030659487844, K:65079028415003646, P:66155872489312272}},
    {size: 1369094286720630785, frequency: {S:116984920656886872, N:219460339608961717, C:54304808473886799, H:209721999471221294, F:169236035002312982, B:158983326845599674, V:92663065902719698, K:130156247136233967, O:85276533030617361, P:132307010592190421}},
    {size: 2738188573441261569, frequency: {S:233975375108457941, N:438928456189438927, C:108613210837842407, H:419448964268293103, F:338472370768154367, B:317960948740365425, V:185323376971783018, O:170550461831692339, K:260309439379214878, P:264605969346019164}},
    {size: 5476377146882523137, frequency: {S:467960220128055250, C:217232547016910488, N:877870066721599679, F:676945223594527128, H:838906353258274321, B:635912209484441540, V:370642078272123912, O:341096486369566898, K:520613712995664595, P:529198249041359326}},];


function getReadableFileSizeString(fileSizeInBytes) {
    if (fileSizeInBytes < 1024) {
        return fileSizeInBytes + ' B';
    }
    let i = -1;
    let byteUnits = [' kB', ' MB', ' GB', ' TB', ' PB', ' EB', ' ZB', ' YB'];
    do {
        fileSizeInBytes = fileSizeInBytes / 1024n;
        i++;
    } while (fileSizeInBytes > 1024n);

    return BigInt(fileSizeInBytes).toLocaleString() + byteUnits[i];
};

let N = 0;
let H = 0;
let K = {}


let LETTERS = ["S", "C", "N", "F", "H", "B", "V", "O", "K", "P"]

function setup() {
    console.log(STEPS.map(e => e.size))
    console.log(STEPS.map((e, i) => "Step " + i))
    frameRate(60);
    createCanvas(960, 670);
}

Array.prototype.max = function () {
    return Math.max.apply(null, this);
};

Array.prototype.min = function () {
    return Math.min.apply(null, this);
};

function draw() {
    let I = Math.min(N, STEPS.length-1);
    background("#10101a");
    stroke('rgb(204, 204, 204)');
    strokeWeight(0.2);

    // elapse
    fill("rgb(204, 204, 204)");
    textSize(28)
    text("Step: " + I, 10, 30);

    // compute
    let step = STEPS[I]


    // find max and sum
    let M = BigInt(0)
    for (t = 0; t < 10; ++t) {
        let letter = LETTERS[t];
        if (step.frequency[letter] > M) M = BigInt(step.frequency[letter]);
    }
    if (M === 0n)
        M = 1n

    // render

    for (t = 0; t < 10; ++t) {
        let letter = LETTERS[t];

        // Index in white
        fill("rgb(204, 204, 204)");
        textSize(20)
        text(letter, 50, 80 + t * 50);

        let X = 100n * BigInt(step.frequency[letter]);
        X = X / M;
        let Z = Number(X);

        // yellow border rectangle
        fill("#10101a");
        stroke('rgb(255, 255, 102)');
        strokeWeight(2.5)
        rect(80, 50 + t * 50, 8 * Z, 40);

        // %
        fill("white");
        stroke('#10101a');
        strokeWeight(2.5)
        text((step.frequency[letter]*100/step.size).toFixed(1) + "%", 8 * Z + 90, 78 + t * 50);

        // totals
        strokeWeight(1)
        fill(255, 255, 102);
        textSize(20)
        text(step.frequency[letter].toLocaleString(), 100, 77 + t * 50);
    }


    // // total fishes
    stroke('rgb(148,179,227)');
    fill('rgb(148,179,227)')
    textSize(20)
    text("Polymer size: " + step.size.toLocaleString() + ` (estimated: ${getReadableFileSizeString(BigInt(step.size))})`, 50, 600);
    text("Range: " + (Object.values(step.frequency).max() - Object.values(step.frequency).min()).toLocaleString(), 50, 625);

    if (H++ > 10) {
        H = 0;
        N++;
    }
}

